---
import VerticalNav from '../components/VerticalNav.astro';
import {Image} from 'astro:assets';
---

<div id="sidebarMenu">
	<div id="mobileMenuIcon">
		<svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" onclick="this.classList.toggle('opened')">
            <defs>
              <style>
                .rect-vect {
                    fill: #1e1e1e;
                    stroke-width: 0px;
                    transition: all 0.5s;
                    transform-box: fill-box;
                    transform-origin: center;
                }
				#rv-2 {
                    transition: all 0.2s;
				}
                .opened #rv-2 {
                    opacity: 0;
                }
                .opened #rv-1 {
                    transform: translate(0, 200%) rotate(135deg);
                }
                .opened #rv-3 {
                    transform: translate(0, -200%)  rotate(-135deg)
                }
				@media(prefers-color-scheme: dark) {
					.rect-vect {
						fill: #e4e4e4;
					}
				}
              </style>
            </defs>
            <g id="Layer_1-2" data-name="Layer 1">
              <rect id="rv-1" class="rect-vect" y ="0" width="32" height="6"/>
              <rect id="rv-2" class="rect-vect" y="13" width="32" height="6"/>
              <rect id="rv-3" class="rect-vect" y="26" width="32" height="6"/>
            </g>
        </svg>
	</div>
	<div id="label">Menu</div>
    <div id="MenuElements">
		<Image src="/logos/ChromeDog_Logo-Icon-LM.svg" width="120" height="120" alt="Chrome Dog Logo" />
		<VerticalNav />
	</div>
</div>

<style>
	#sidebarMenu {
		--tab-depth: 50px;
		--tab-height: 60px;
		--tab-inner-size: 100px;
		position: fixed;
		
		display: flex;
		flex: 1;
		flex-direction: column;
		align-items: center;
		padding: 20px;
		padding-right: 60px;
		height: calc(100vh - 40px);
		width:320px;
		left: -340px;
		transition: all 0.2s;
		z-index: 999;
        background-color: rgb(var(--color-background-muted));
		background-image: url("/graphics/ChromeDog_Logo-Icon-Lined_2.svg");
		background-repeat: no-repeat;
		background-position: -100px 0%;
		clip-path: 
			polygon(
				0 0, 
				100% 0, 
				100% var(--tab-height), 
				calc(100% - var(--tab-depth)) var(--tab-inner-size), 
				calc(100% - var(--tab-depth)) 100%, 
				0 100%
			);
	}
	#mobileMenuIcon {
		position: absolute;
		top: 20px;
		right: 15px;
	}
	.open-menu {
		left: 0px !important;
	}
	#label {
		position: absolute;
		top: calc(50% - 20px);
		right: 0px;
		rotate: 90deg;
		text-transform: uppercase;
		font-family: var(--mono-font);
		color: rgb(var(--color-emphasis));
		font-size: 1.5rem;
	}
	#MenuElements {
		display: flex;
		flex-direction: column;
		flex-grow: 1;
		justify-content: center;
	}
	@media(min-width:640px) {
		#sidebarMenu {
			--tab-outer-size: 60px;
			max-width: 440px;
			
		clip-path: 
		polygon(
			0 0, 
			calc(100% - var(--tab-depth)) 0, 
			calc(100% - var(--tab-depth)) calc(50% - var(--tab-inner-size)), 
			100% calc(50% - var(--tab-outer-size)), 
			100% calc(50% + var(--tab-outer-size)), 
			calc(100% - var(--tab-depth)) calc(50% + var(--tab-inner-size)), 
			calc(100% - var(--tab-depth)) 100%, 
			0 100%
		);
		}
		#mobileMenuIcon {
			display: none;
		}
	}
	#verticalNav {
		max-height: 100vh;
		width: auto;
		margin: 0 auto;
	}
	.hidden {
		left: -400px !important;
	}
</style>

<script>
const menuEl = document.getElementById("sidebarMenu");
const menuIconEl = document.getElementById("mobileMenuIcon");

menuIconEl.onclick = event => {
	menuEl.classList.toggle("open-menu");
}

// For slding out of view on scroll down, and back on scroll up
// Initial state
var scrollPos = 0;
// adding scroll event
window.addEventListener('scroll', function(){
  // detects new state and compares it with the new one
  if ((document.body.getBoundingClientRect()).top > scrollPos)
		menuEl.classList.remove('hidden');
	else
		menuEl.classList.add('hidden');
	// saves the new position for iteration.
	scrollPos = (document.body.getBoundingClientRect()).top;
});
</script>