---
export interface Props {
	title: string;
	meta: string;
	body: string;
	href: string;
	target: string;
}

const { href, title, meta, body, target } = Astro.props;
---

<li class="link-card">
	<a href={href} target={target}>
		<h3>
			{title} <span> &rarr;</span>
		</h3>
		<span class="meta">{meta}</span>
		<p>
			{body}
		</p>
	</a>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		margin-top: 20px;
		padding: 0.25rem;
		background-color: white;
		background-image: none;
		background-size: 400%;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		background-color: white;
	}
	h3 {
		font-family: consolas, monaco, monospace;
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	.meta {
		font-size: 0.8rem;
		color: rgba(255,255,255,0.5);
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
		box-shadow: 0px 0px 6px var(--element-glow);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
	@media (prefers-color-scheme: dark) {
		.link-card {
			background-color: var(--dark-background);
			color: #fff;
		}
		.link-card > a {
			color: #fff;
			background-color: transparent;
		}
		.link-card:is(:hover, :focus-within) {
			background-position: 0;
			background-image: var(--accent-gradient);
		}
		.link-card:is(:hover, :focus-within) h3 {
			color: rgb(var(--accent));
		}
	}
</style>
