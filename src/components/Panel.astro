---
import { Image } from 'astro:assets';

export interface Props {
    image: string;
	title: string;
	meta: string;
	body: string;
	href: string;
	target: string;
    style: string;
}

const { image, href, title, meta, body, target, style } = Astro.props;
---

<a href={href} target={target} id="Panel" class={style}>
    <!--  -->
    <div class="image-container">
        <Image src={image} width="400" height="300" id="panelImage" alt={title} />
    </div>
    <div id="Body">
        <span id="Meta">{meta}</span>
        <h3 class="panel-title">{title}</h3>
        <p>{body}</p>
        <span class="panel-cta">Follow Link -></span>
        <svg id="CornerAccent" width="61" height="37" viewBox="0 0 61 37" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M7.56264 36.2326L0.888245 29.5582V0H39.3456V36.2326H7.56264Z" fill="black" fill-opacity="0.3"/>
            <rect x="44.3945" width="5.45599" height="36.2327" fill="black" fill-opacity="0.3"/>
            <rect x="54.8995" width="5.45599" height="36.2327" fill="black" fill-opacity="0.3"/>
        </svg>            
    </div>
</a>

<style>
:root {
    --notchSize: 18px;
    --transition-delay: 0.2s;
}
/* Defaults */
#Panel {
    position: relative;
    padding: 1rem;
    clip-path: 
    polygon(
      0% 0%, 
      var(--notchSize) 0%, 
      calc(100% - var(--notchSize)) 0%, 
      100% var(--notchSize), 
      100% calc(100% - var(--notchSize)), 
      100% 100%, 
      var(--notchSize) 100%, 
      0% calc(100% - var(--notchSize))
    );
}
.panel-title {
    margin-top: 0;
    margin-bottom: 1.5rem;
    font-size: 2rem;
}
#Meta {
    text-transform: uppercase;
}
#Body {
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 1rem;
}
#Meta, .panel-cta {
    font-family: var(--mono-font);
    text-transform: uppercase;
}
.panel-cta {
    align-self: flex-end;
    font-size: 1.3rem;
    transition: color 0.1s;
    line-height: 2rem;
}
p {
    margin-bottom: 2.5rem;
}
/* End Defaults */

/* Image */
.image-container {
    position: relative;
    width: 100%;
    height: 200px;
    max-height: 300px;
    clip-path: 
    polygon(
        0 0, 
        calc(100% - var(--notchSize)) 0, 
        100% var(--notchSize), 
        100% 100%, 
        0 100%
    );
    overflow: hidden;
}
#panelImage {
    width: 100%;
    height: auto;
    clip-path: 
    polygon(
        0 0, 
        calc(100% - var(--notchSize)) 0, 
        100% var(--notchSize), 
        100% 100%, 
        0 100%
    );
    height: auto;
    transition: filter var(--transition-delay);
}
#Panel:hover #panelImage {
    filter: opacity(0.7);
}
/* End Image */

/* Accent */
#CornerAccent {
    width: 90px;
    height: auto;
    position: absolute;
    bottom: 0px;
    left: 0px;
}
/* End Accent */

/* Primary */
.primary {
    background: rgb(var(--color-emphasis));
    transition: background-color var(--transition-delay);
}
.primary:hover {
    background: rgb(var(--color-primary));
}
.primary #CornerAccent path, .primary #CornerAccent rect {
    fill: rgba(var(--color-muted), 0.5);
}
.primary .panel-title, .primary .panel-cta{
    color: rgb(var(--color-muted));
}
.primary p, .primary #Meta {
    color: rgba(var(--color-muted), 0.5);
}
/* End Primary */
/* Secondary */
.secondary {
    /* border: solid 1px rgb(var(--color-primary)); */
    background: rgb(var(--color-base));
    transition: background-color var(--transition-delay);
}
.secondary:before {
    --border-width: 3px;
    --inner-size: calc(var(--border-width) * 2);
    content: '';
    position: absolute;
    top: var(--border-width);
    left: var(--border-width);
    width: calc(100% - var(--inner-size));
    height: calc(100% - var(--inner-size));
    background: rgb(var(--color-muted));
    clip-path: 
    polygon(
      0% 0%, 
      var(--notchSize) 0%, 
      calc(100% - var(--notchSize)) 0%, 
      100% var(--notchSize), 
      100% calc(100% - var(--notchSize)), 
      100% 100%, 
      var(--notchSize) 100%, 
      0% calc(100% - var(--notchSize))
    );
}
.secondary:hover {
    background: rgb(var(--color-primary));
}
.secondary #Body {
    z-index: 1;
}
.secondary .panel-title, .secondary .panel-cta {
    color: rgba(var(--color-emphasis));
}
.secondary:hover .panel-title, .secondary:hover .panel-cta {
    color: rgba(var(--color-primary));
}
.secondary:hover::before{
    background-color: rgba(var(--color-muted), 0.9);
}
.secondary p, .secondary #Meta {
    color: rgba(var(--color-emphasis), 0.5);
}
.secondary #CornerAccent path, .secondary #CornerAccent rect {
    fill: rgba(var(--color-emphasis), 0.5);
}
/* End Secondary */

/* @media(prefers-color-scheme: dark) {
    .primary p, .primary #Meta {
        color: rgba(0, 0, 0, 0.5);
    }
} */
</style>